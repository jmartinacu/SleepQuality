
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  email             String @unique
  password          String
  gender            Gender
  age               Int
  height            Float
  weight            Float
  chronicDisorders  String[]
  BMI               Float
  role              Role @default(USER)
  verificationCode  String @default(uuid())
  passwordResetCode Int?
  verified          Boolean @default(false)
  session           Session?
  profilePicture    String?
  answers           Answer[] 
}

model Session {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  valid     Boolean @default(true)
  updatedAt DateTime @updatedAt
  user      User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade) 
  userId    String @unique @db.ObjectId
}

model Questionnaire {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique
  questions   Json
  additionalInformation Json[]
  createdAt   DateTime @default(now())
  updatedAt DateTime @updatedAt
  answers     Answer[]
}

model Answer {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  answers         Json
  createdAt       DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userId         String @db.ObjectId
  user           User @relation(fields: [userId], references: [id])
  questionnaireId String @db.ObjectId
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id])
}

enum Gender {
  MASCULINE
  FEMININE
  NEUTER
}


enum Role {
  ADMIN
  USER
}
